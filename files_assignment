__winc_id__ = "ae539110d03e49ea8738fd413ac44ba8"
__human_name__ = "files"

import os
import zipfile

# define some variables
zip_file_path = os.path.join(os.getcwd(), "files", "data.zip")
cache_dir_path = os.path.join(os.getcwd(), "files", "cache")

# the main function, specifying the order of execution
def main():

    clean_cache()
    cache_zip(zip_file_path, cache_dir_path)

    list = cached_files()
    find_password(list)


def clean_cache():

    directory_name = "files"
    folder_name = "cache"
    path = os.path.join(os.getcwd(), directory_name, folder_name)
    print(path)

    try:
        # create target Directory
        os.mkdir(path)

    except FileExistsError:
        print("Directory ", folder_name, " already exists, so contents are removed")

        for filename in os.listdir(path):
            os.remove(os.path.join(path, filename))


def cache_zip(zip_file_path, cache_dir_path):

    with zipfile.ZipFile(zip_file_path, "r") as zip_ref:
        zip_ref.extractall(cache_dir_path)


def cached_files():

    dir_name = os.path.abspath(os.getcwd())
    abs_path_cache_folder = os.path.join(dir_name, "files", "cache")
    list = []

    for filename in os.listdir(abs_path_cache_folder):
        list.append(os.path.join(abs_path_cache_folder, filename))

    return list


def find_password(list):

    for file_path in list:
        with open(file_path, "r") as file:
            # read all content of the file
            content = file.read()
            # check if string present in the file
            if "password" in content:
                starting_index = content.find(":")
                ending_index = content.find("0.79")
                password = content[starting_index + 2 : ending_index - 1]
                return password


if __name__ == "__main__":
    main()
